{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1","program":"C:\\Users\\victo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","bracket_algorithm_traits","--edition=2018","C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=d3e3a6de04e09b3b","-C","extra-filename=-d3e3a6de04e09b3b","--out-dir","d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\rust-game\\Flappy-Dragon\\target\\rls\\debug\\deps","-L","dependency=d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\rust-game\\Flappy-Dragon\\target\\rls\\debug\\deps","--extern","bracket_geometry=d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\rust-game\\Flappy-Dragon\\target\\rls\\debug\\deps\\libbracket_geometry-1e63951ebb9d8014.rmeta","--extern","smallvec=d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\rust-game\\Flappy-Dragon\\target\\rls\\debug\\deps\\libsmallvec-452ea521d93babb4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\victo\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"d:\\Pasta_de_arquivos_de_trabalho\\Rust Projects\\rust-game\\Flappy-Dragon\\target\\rls\\debug\\deps\\libbracket_algorithm_traits-d3e3a6de04e09b3b.rmeta"},"prelude":{"crate_id":{"name":"bracket_algorithm_traits","disambiguator":[4969197775279149822,10838145366886359458]},"crate_root":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src","external_crates":[{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","num":13,"id":{"name":"bracket_geometry","disambiguator":[3581648169947864556,17675461994494240940]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","num":14,"id":{"name":"ultraviolet","disambiguator":[12325569751719896321,16546555300943600363]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","num":15,"id":{"name":"wide","disambiguator":[14258966465175572034,551382483584406137]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","num":16,"id":{"name":"bytemuck","disambiguator":[8478502438656522490,9386160555657624940]}},{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","num":17,"id":{"name":"smallvec","disambiguator":[586103597685265026,17635821128416778049]}}],"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":1312,"line_start":1,"line_end":44,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":1007,"byte_end":1018,"line_start":34,"line_end":34,"column_start":33,"column_end":44},"alias_span":null,"name":"Algorithm2D","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":1083,"byte_end":1094,"line_start":37,"line_end":37,"column_start":33,"column_end":44},"alias_span":null,"name":"Algorithm3D","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":1151,"byte_end":1158,"line_start":40,"line_end":40,"column_start":29,"column_end":36},"alias_span":null,"name":"BaseMap","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":17,"index":118},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":1290,"byte_end":1298,"line_start":43,"line_end":43,"column_start":24,"column_end":32},"alias_span":null,"name":"SmallVec","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":17,"index":38},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":1300,"byte_end":1308,"line_start":43,"line_end":43,"column_start":34,"column_end":42},"alias_span":null,"name":"smallvec","value":"","parent":{"krate":0,"index":27}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":1312,"line_start":1,"line_end":44,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":27}],"decl_id":null,"docs":" This crate is part of the `bracket-lib` family.","sig":null,"attributes":[{"value":"warn(clippy :: all, clippy :: pedantic, clippy :: cargo)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/ This crate is part of the `bracket-lib` family.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":55,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":107,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ It provides traits for you to implement on your map (and other geometric constructs),","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":111,"byte_end":200,"line_start":4,"line_end":4,"column_start":1,"column_end":90}},{"value":"/ translating them into a format that works with the `bracket-pathfinding` and `bracket-geometry`","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":201,"byte_end":300,"line_start":5,"line_end":5,"column_start":1,"column_end":100}},{"value":"/ systems.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":301,"byte_end":313,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":314,"byte_end":317,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ It is a separate crate so that both can depend upon it.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":318,"byte_end":377,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":378,"byte_end":381,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Defaults are provided to get you up and running quickly, but may (should!) be overridden if you","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":382,"byte_end":481,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"/ don't want to use my default array striding.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":482,"byte_end":530,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":531,"byte_end":534,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":535,"byte_end":551,"line_start":13,"line_end":13,"column_start":1,"column_end":17}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":552,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ use bracket_algorithm_traits::prelude::{BaseMap, Algorithm2D};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":564,"byte_end":630,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ use bracket_geometry::prelude::Point;","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":631,"byte_end":672,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":673,"byte_end":676,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ struct TestMap{};","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":677,"byte_end":698,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/ impl BaseMap for TestMap {}","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":699,"byte_end":730,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/ impl Algorithm2D for TestMap{","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":731,"byte_end":764,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/     fn dimensions(&self) -> Point {","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":765,"byte_end":804,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/         Point::new(2, 2)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":805,"byte_end":833,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":834,"byte_end":843,"line_start":23,"line_end":23,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":844,"byte_end":849,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":850,"byte_end":857,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2347,"byte_end":2358,"line_start":22,"line_end":22,"column_start":11,"column_end":22},"name":"Algorithm2D","qualname":"::algorithm2d::Algorithm2D","value":"Algorithm2D: BaseMap","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11}],"decl_id":null,"docs":" Implement these for handling conversion to/from 2D coordinates (they are separate, because you might\n want Dwarf Fortress style 3D!)\n","sig":null,"attributes":[{"value":"/ Implement these for handling conversion to/from 2D coordinates (they are separate, because you might","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2197,"byte_end":2301,"line_start":20,"line_end":20,"column_start":1,"column_end":105}},{"value":"/ want Dwarf Fortress style 3D!)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2302,"byte_end":2336,"line_start":21,"line_end":21,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2490,"byte_end":2506,"line_start":25,"line_end":25,"column_start":8,"column_end":24},"name":"point2d_to_index","qualname":"::algorithm2d::Algorithm2D::point2d_to_index","value":"pub fn point2d_to_index(&Self, Point) -> usize","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Convert a Point (x/y) to an array index. Defaults to an index based on an array\n strided X first.\n","sig":null,"attributes":[{"value":"/ Convert a Point (x/y) to an array index. Defaults to an index based on an array","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2374,"byte_end":2457,"line_start":23,"line_end":23,"column_start":5,"column_end":88}},{"value":"/ strided X first.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2462,"byte_end":2482,"line_start":24,"line_end":24,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2797,"byte_end":2813,"line_start":34,"line_end":34,"column_start":8,"column_end":24},"name":"index_to_point2d","qualname":"::algorithm2d::Algorithm2D::index_to_point2d","value":"pub fn index_to_point2d(&Self, usize) -> Point","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Convert an array index to a point. Defaults to an index based on an array\n strided X first.\n","sig":null,"attributes":[{"value":"/ Convert an array index to a point. Defaults to an index based on an array","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2687,"byte_end":2764,"line_start":32,"line_end":32,"column_start":5,"column_end":82}},{"value":"/ strided X first.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2769,"byte_end":2789,"line_start":33,"line_end":33,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":3084,"byte_end":3094,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::algorithm2d::Algorithm2D::dimensions","value":"pub fn dimensions(&Self) -> Point","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":" Retrieve the map's dimensions. Made optional to reduce API breakage.\n","sig":null,"attributes":[{"value":"/ Retrieve the map's dimensions. Made optional to reduce API breakage.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":3004,"byte_end":3076,"line_start":40,"line_end":40,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":3517,"byte_end":3526,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::algorithm2d::Algorithm2D::in_bounds","value":"pub fn in_bounds(&Self, Point) -> bool","parent":{"krate":0,"index":7},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6676,"byte_end":6687,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"Algorithm3D","qualname":"::algorithm3d::Algorithm3D","value":"Algorithm3D: BaseMap","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" Implement these for handling conversion to/from 2D coordinates (they are separate, because you might\n want Dwarf Fortress style 3D!)\n","sig":null,"attributes":[{"value":"/ Implement these for handling conversion to/from 2D coordinates (they are separate, because you might","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6526,"byte_end":6630,"line_start":19,"line_end":19,"column_start":1,"column_end":105}},{"value":"/ want Dwarf Fortress style 3D!)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6631,"byte_end":6665,"line_start":20,"line_end":20,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6824,"byte_end":6840,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"point3d_to_index","qualname":"::algorithm3d::Algorithm3D::point3d_to_index","value":"pub fn point3d_to_index(&Self, Point3) -> usize","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Convert a Point (x/y) to an array index. Defaults to a Z, Y, X striding.\n","sig":null,"attributes":[{"value":"/ Convert a Point (x/y) to an array index. Defaults to a Z, Y, X striding.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6703,"byte_end":6779,"line_start":22,"line_end":22,"column_start":5,"column_end":81}},{"value":"allow(clippy :: cast_sign_loss)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6784,"byte_end":6816,"line_start":23,"line_end":23,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":7133,"byte_end":7149,"line_start":32,"line_end":32,"column_start":8,"column_end":24},"name":"index_to_point3d","qualname":"::algorithm3d::Algorithm3D::index_to_point3d","value":"pub fn index_to_point3d(&Self, usize) -> Point3","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Convert an array index to a point.\n","sig":null,"attributes":[{"value":"/ Convert an array index to a point.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6999,"byte_end":7037,"line_start":29,"line_end":29,"column_start":5,"column_end":43}},{"value":"allow(clippy :: cast_possible_wrap)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":7042,"byte_end":7078,"line_start":30,"line_end":30,"column_start":5,"column_end":41}},{"value":"allow(clippy :: cast_possible_truncation)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":7083,"byte_end":7125,"line_start":31,"line_end":31,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":7504,"byte_end":7514,"line_start":46,"line_end":46,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::algorithm3d::Algorithm3D::dimensions","value":"pub fn dimensions(&Self) -> Point3","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":" Dimensions\n","sig":null,"attributes":[{"value":"/ Dimensions","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":7482,"byte_end":7496,"line_start":45,"line_end":45,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":7940,"byte_end":7949,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::algorithm3d::Algorithm3D::in_bounds","value":"pub fn in_bounds(&Self, Point3) -> bool","parent":{"krate":0,"index":15},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11131,"byte_end":11138,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"BaseMap","qualname":"::basemap::BaseMap","value":"BaseMap","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26}],"decl_id":null,"docs":" Implement this trait to support path-finding functions.\n","sig":null,"attributes":[{"value":"/ Implement this trait to support path-finding functions.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11061,"byte_end":11120,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11348,"byte_end":11357,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"is_opaque","qualname":"::basemap::BaseMap::is_opaque","value":"pub fn is_opaque(&Self, usize) -> bool","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" True is you cannot see through the tile, false otherwise. Default implementation\n always returns true, and is provided so you don't have to implement it if you\n aren't using it.\n","sig":null,"attributes":[{"value":"/ True is you cannot see through the tile, false otherwise. Default implementation","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11145,"byte_end":11229,"line_start":18,"line_end":18,"column_start":5,"column_end":89}},{"value":"/ always returns true, and is provided so you don't have to implement it if you","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11234,"byte_end":11315,"line_start":19,"line_end":19,"column_start":5,"column_end":86}},{"value":"/ aren't using it.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11320,"byte_end":11340,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11697,"byte_end":11716,"line_start":29,"line_end":29,"column_start":8,"column_end":27},"name":"get_available_exits","qualname":"::basemap::BaseMap::get_available_exits","value":"pub fn get_available_exits(&Self, usize) -> SmallVec<[(usize, f32); ]>","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Return a vector of tile indices to which one can path from the idx.\n These do NOT have to be contiguous - if you want to support teleport pads, that's awesome.\n Default implementation is provided that proves an empty list, in case you aren't using\n it.\n","sig":null,"attributes":[{"value":"/ Return a vector of tile indices to which one can path from the idx.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11412,"byte_end":11483,"line_start":25,"line_end":25,"column_start":5,"column_end":76}},{"value":"/ These do NOT have to be contiguous - if you want to support teleport pads, that's awesome.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11488,"byte_end":11582,"line_start":26,"line_end":26,"column_start":5,"column_end":99}},{"value":"/ Default implementation is provided that proves an empty list, in case you aren't using","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11587,"byte_end":11677,"line_start":27,"line_end":27,"column_start":5,"column_end":95}},{"value":"/ it.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11682,"byte_end":11689,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":12168,"byte_end":12188,"line_start":37,"line_end":37,"column_start":8,"column_end":28},"name":"get_pathing_distance","qualname":"::basemap::BaseMap::get_pathing_distance","value":"pub fn get_pathing_distance(&Self, usize, usize) -> f32","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Return the distance you would like to use for path-finding. Generally, Pythagoras distance (implemented in geometry)\n is fine, but you might use Manhattan or any other heuristic that fits your problem.\n Default implementation returns 1.0, which isn't what you want but prevents you from\n having to implement it when not using it.\n","sig":null,"attributes":[{"value":"/ Return the distance you would like to use for path-finding. Generally, Pythagoras distance (implemented in geometry)","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11806,"byte_end":11926,"line_start":33,"line_end":33,"column_start":5,"column_end":125}},{"value":"/ is fine, but you might use Manhattan or any other heuristic that fits your problem.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":11931,"byte_end":12018,"line_start":34,"line_end":34,"column_start":5,"column_end":92}},{"value":"/ Default implementation returns 1.0, which isn't what you want but prevents you from","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":12023,"byte_end":12110,"line_start":35,"line_end":35,"column_start":5,"column_end":92}},{"value":"/ having to implement it when not using it.","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\basemap.rs","byte_start":12115,"byte_end":12160,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":935,"byte_end":942,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" Exported traits\n","sig":null,"attributes":[{"value":"/ Exported traits","span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\lib.rs","byte_start":907,"byte_end":926,"line_start":31,"line_end":31,"column_start":1,"column_end":20}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm2d.rs","byte_start":2360,"byte_end":2367,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":22},"to":{"krate":0,"index":7}},{"span":{"file_name":"C:\\Users\\victo\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bracket-algorithm-traits-0.8.1\\src\\algorithm3d.rs","byte_start":6689,"byte_end":6696,"line_start":21,"line_end":21,"column_start":24,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":22},"to":{"krate":0,"index":15}}]}